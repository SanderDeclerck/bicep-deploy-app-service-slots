name: Sample Webapp

on:
  push:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: üõ† Build
    runs-on: ubuntu-latest

    permissions:
      packages: write

    outputs:
      containerImage-sampleWebApp: ${{ steps.image-tag.outputs.image-sample-web-app }}

    steps:
      - name: ‚öô Checkout repository
        uses: actions/checkout@v2

      - name: ‚öô Login to registry ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: ‚öô Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/sample-web-app
          github-token: ${{ secrets.GITHUB_TOKEN }}
          tags: |
            type=ref,event=branch
            type=sha

      - name: üõ† Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./sample-webapp/src
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: üèÅ Output image tag
        id: image-tag
        run: echo "::set-output name=image-sample-web-app::${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/sample-web-app:sha-$(git rev-parse --short HEAD)" | tr '[:upper:]' '[:lower:]'
  
  deploy:
    name: üñ•Ô∏è Deploy
    runs-on: ubuntu-latest
    needs: build
    
    permissions:
      id-token: write
      contents: read

    steps:
    
    - name: ‚öô Checkout repository
      uses: actions/checkout@v2

    - name: 'üîë Sign-in To Azure'
      uses: azure/login@v1
      with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: 'üñ•Ô∏è Deploy infrastructure'
      run: |
          az deployment group create -g ${{ secrets.SAMPLE_APP_RESOURCE_GROUP }} -f ./sample-webapp/infrastructure/main.bicep \
             -p \
                appServicePlanName=plan-core-infrastructure \
                appServicePlanGroup=${{ secrets.CORE_INFRA_RESOURCE_GROUP }}